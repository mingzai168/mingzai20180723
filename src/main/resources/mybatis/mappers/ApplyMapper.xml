<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zttek.thesis.modules.mapper.ApplyMapper">
    <resultMap id="BaseResultMap" type="cn.zttek.thesis.modules.model.Apply">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="projid" jdbcType="BIGINT" property="projid" />
        <result column="thesisid" jdbcType="BIGINT" property="thesisid" />
        <result column="studentid" jdbcType="BIGINT" property="studentid" />
        <result column="apply_info" jdbcType="VARCHAR" property="applyInfo" />
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
        <result column="teacherid" jdbcType="BIGINT" property="teacherid" />
        <result column="reply_info" jdbcType="VARCHAR" property="replyInfo" />
        <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
        <result column="valid" jdbcType="BIT" property="valid" />
        <result column="cdate" jdbcType="TIMESTAMP" property="cdate" />
        <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from apply
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyProperty="id" parameterType="cn.zttek.thesis.modules.model.Apply" useGeneratedKeys="true">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into apply (projid, thesisid, studentid,
        apply_info, apply_time, teacherid,
        reply_info, reply_time, valid,
        cdate, mdate)
        values (#{projid,jdbcType=BIGINT}, #{thesisid,jdbcType=BIGINT}, #{studentid,jdbcType=BIGINT},
        #{applyInfo,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{teacherid,jdbcType=BIGINT},
        #{replyInfo,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}, #{valid,jdbcType=BIT},
        #{cdate,jdbcType=TIMESTAMP}, #{mdate,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.zttek.thesis.modules.model.Apply">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update apply
        set projid = #{projid,jdbcType=BIGINT},
        thesisid = #{thesisid,jdbcType=BIGINT},
        studentid = #{studentid,jdbcType=BIGINT},
        apply_info = #{applyInfo,jdbcType=VARCHAR},
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
        teacherid = #{teacherid,jdbcType=BIGINT},
        reply_info = #{replyInfo,jdbcType=VARCHAR},
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
        valid = #{valid,jdbcType=BIT},
        cdate = #{cdate,jdbcType=TIMESTAMP},
        mdate = #{mdate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, projid, thesisid, studentid, apply_info, apply_time, teacherid, reply_info,
        reply_time, valid, cdate, mdate
        from apply
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, projid, thesisid, studentid, apply_info, apply_time, teacherid, reply_info,
        reply_time, valid, cdate, mdate
        from apply where valid = 1
    </select>

    <!-- =========================以下为手动添加===================================== -->
    <sql id="Base_Column_List">
        id, projid, thesisid, studentid, apply_info, apply_time, teacherid, reply_info,
        reply_time, valid, cdate, mdate
    </sql>
    <resultMap id="ExtendResultMap" type="cn.zttek.thesis.modules.model.Apply" extends="BaseResultMap">
        <result column="topic" jdbcType="VARCHAR" property="topic" />
        <result column="teacher" jdbcType="VARCHAR" property="teacher" />
        <result column="stuno" jdbcType="VARCHAR" property="stuno" />
        <result column="student" jdbcType="VARCHAR" property="student" />
    </resultMap>
    <select id="listByStudent" resultMap="BaseResultMap">
        select a.id, a.projid, a.thesisid, a.studentid, a.apply_info, a.apply_time, a.teacherid, a.reply_info,
        a.reply_time, a.valid, a.cdate, a.mdate, t.topic, t.username as teacher
        from apply a, (select tt.id, tt.topic, tt.username from thesis_teacher tt where tt.projid = #{projid}) as t
        where a.valid = 1
        and a.thesisid = t.id
        and a.projid = #{projid}
        and a.studentid = #{studentid}
        order by a.cdate desc
    </select>

    <select id="getApplyCount" resultMap="BaseResultMap">
        select count(a.id)
        from apply a
        where a.valid = 1
        and a.projid = #{projid}
        and a.studentid = #{studentid}
    </select>

    <select id="listByTeacher" resultMap="BaseResultMap">
        select a.id, a.projid, a.thesisid, a.studentid, a.apply_info, a.apply_time, a.teacherid, a.reply_info,
        a.reply_time, a.valid, a.cdate, a.mdate, t.topic, u.account as stuno, u.username as student
        from apply a, (select tt.id, tt.topic from thesis_teacher tt where tt.projid = #{projid} and tt.teacherid = #{teacherid}) as t, user u
        where a.valid = 1 and u.valid = 1
        and a.thesisid = t.id
        and a.studentid = u.id
        and a.projid = #{projid}
        and a.teacherid = #{teacherid}
        order by a.thesisid desc, a.apply_time desc
    </select>

    <update id="updateByThesis">
        update apply a
        set a.reply_info = #{reply_info},
            a.reply_time = now(),
            a.mdate = now()
        where a.thesisid = #{thesisid} and a.id != #{applyid}
    </update>
    <update id="updateByStudent">
        update apply a
        set a.reply_info = #{reply_info},
            a.reply_time = now(),
            a.mdate = now()
        where a.studentid = #{studentid} and a.id != #{applyid}
    </update>
</mapper>